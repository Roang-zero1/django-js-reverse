name: CI
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  tox:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']
        os: [macOS-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install
        run: |
          pip install tox

      - name: tox
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tox -e py,lint,release

      - name: upload dist
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}_${{ matrix.python-version}}_dist
          path: dist

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@v1
        with:
            flag-name: run-${{ matrix.os }}_${{ matrix.python-version}}
            parallel: true

  upload-coveralls:
    needs: tox
    if: ${{ always() }}
    runs-on: ubuntu-latest

    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@v1
      with:
        parallel-finished: true
        carryforward: "run-ubuntu-latest-_3.7,run-ubuntu-latest-_3.8,run-ubuntu-latest-_3.9,run-ubuntu-latest-_3.10"

  all-successful:
    # https://github.community/t/is-it-possible-to-require-all-github-actions-tasks-to-pass-without-enumerating-them/117957/4?u=graingert
    runs-on: ubuntu-latest
    needs: [tox]
    steps:
      - name: Download dists for PyPI
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-latest_3.8_dist
          path: dist

      - name: Display structure of donwloaded files
        run: ls -R

      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}

      - name: note that all tests succeeded
        run: echo "ðŸŽ‰"
